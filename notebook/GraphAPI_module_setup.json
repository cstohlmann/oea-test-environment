{
	"name": "GraphAPI_module_setup",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark3p1sm",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 4,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "4",
				"spark.dynamicAllocation.maxExecutors": "4",
				"spark.autotune.trackingId": "a4e17528-5fbc-4f66-a7bb-5212d48ba795"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"7aa442ef-5610-464a-a39a-33b39ebaea13": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "Long",
										"1": "Abigail",
										"2": "abigaillong3@contosoisd3.onmicrosoft.com",
										"3": "0d444980-3123-46f4-85d3-6f49e4619ea5"
									},
									{
										"0": "Smith",
										"1": "Abigail",
										"2": "abigailsmith35@contosoisd3.onmicrosoft.com",
										"3": "c19234e7-a816-41af-9524-4be4092fc559"
									},
									{
										"0": "Jordan",
										"1": "Adrian",
										"2": "adrianjordan15@contosoisd3.onmicrosoft.com",
										"3": "7a2ca37f-d1f3-4be8-8abe-8711d4eea8d6"
									},
									{
										"0": "Long",
										"1": "Amanda",
										"2": "amandalong47@contosoisd3.onmicrosoft.com",
										"3": "154f2b2c-9e73-4ecc-917e-06c0e440ea15"
									},
									{
										"0": "Berger",
										"1": "Amber",
										"2": "amberberger79@contosoisd3.onmicrosoft.com",
										"3": "dbc10b91-8d2c-4cf2-ac08-985ad3b4d6b4"
									},
									{
										"0": "Buchanan",
										"1": "Amber",
										"2": "amberbuchanan5@contosoisd3.onmicrosoft.com",
										"3": "3f901837-788d-407b-b6e5-3dd9018011fe"
									},
									{
										"0": "Cook",
										"1": "Amber",
										"2": "ambercook62@contosoisd3.onmicrosoft.com",
										"3": "8ec9eba7-aab5-4f79-b798-47320dbbef0d"
									},
									{
										"0": "Price",
										"1": "Amy",
										"2": "amyprice29@contosoisd3.onmicrosoft.com",
										"3": "ce02f59b-7ab4-426d-be15-f831bef543a8"
									},
									{
										"0": "Berry",
										"1": "Andrea",
										"2": "andreaberry63@contosoisd3.onmicrosoft.com",
										"3": "1e9fb7e6-a12b-43d9-bf5a-c0c832226db8"
									},
									{
										"0": "Hunter",
										"1": "Andrew",
										"2": "andrewhunter25@contosoisd3.onmicrosoft.com",
										"3": "ebdecc9f-bfd9-4a32-bc62-07554666ec00"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "surname",
										"type": "string"
									},
									{
										"key": "1",
										"name": "givenName",
										"type": "string"
									},
									{
										"key": "2",
										"name": "userPrincipalName",
										"type": "string"
									},
									{
										"key": "3",
										"name": "id",
										"type": "string"
									}
								]
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"d43c0a78-49d3-45fa-9ec0-60c23ff1daaa": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "gloriafowler49@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "johnhampton54@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "jenniferdavenport34@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "tj@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "davidwest41@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "davidtaylor44@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "justincooper74@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "annaalvarado60@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "jessicaedwards33@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									},
									{
										"0": "",
										"1": "",
										"2": "2021-10-16",
										"3": "abigaillong3@contosoisd3.onmicrosoft.com",
										"4": "7",
										"5": "false",
										"6": "false",
										"7": "false",
										"8": "false",
										"9": "false",
										"10": "false",
										"11": "false",
										"12": "false",
										"13": "false",
										"14": "false",
										"15": "false",
										"16": "false",
										"17": "false",
										"18": "false",
										"19": "false",
										"20": "false",
										"21": "false",
										"22": "false",
										"23": "false",
										"24": "false",
										"25": "false",
										"26": "false",
										"27": "false",
										"28": "false",
										"29": "false",
										"30": "false",
										"31": "false",
										"32": "false",
										"33": "false",
										"34": "false",
										"35": "false",
										"36": "false",
										"37": "false",
										"38": "false"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "lastActivationDate",
										"type": "string"
									},
									{
										"key": "1",
										"name": "lastActivityDate",
										"type": "string"
									},
									{
										"key": "2",
										"name": "reportRefreshDate",
										"type": "string"
									},
									{
										"key": "3",
										"name": "userPrincipalName",
										"type": "string"
									},
									{
										"key": "4",
										"name": "reportPeriod",
										"type": "bigint"
									},
									{
										"key": "5",
										"name": "mobile",
										"type": "boolean"
									},
									{
										"key": "6",
										"name": "web",
										"type": "boolean"
									},
									{
										"key": "7",
										"name": "mac",
										"type": "boolean"
									},
									{
										"key": "8",
										"name": "windows",
										"type": "boolean"
									},
									{
										"key": "9",
										"name": "excel",
										"type": "boolean"
									},
									{
										"key": "10",
										"name": "excelMobile",
										"type": "boolean"
									},
									{
										"key": "11",
										"name": "excelWeb",
										"type": "boolean"
									},
									{
										"key": "12",
										"name": "excelMac",
										"type": "boolean"
									},
									{
										"key": "13",
										"name": "excelWindows",
										"type": "boolean"
									},
									{
										"key": "14",
										"name": "oneNote",
										"type": "boolean"
									},
									{
										"key": "15",
										"name": "oneNoteMobile",
										"type": "boolean"
									},
									{
										"key": "16",
										"name": "oneNoteWeb",
										"type": "boolean"
									},
									{
										"key": "17",
										"name": "oneNoteMac",
										"type": "boolean"
									},
									{
										"key": "18",
										"name": "oneNoteWindows",
										"type": "boolean"
									},
									{
										"key": "19",
										"name": "outlook",
										"type": "boolean"
									},
									{
										"key": "20",
										"name": "outlookMobile",
										"type": "boolean"
									},
									{
										"key": "21",
										"name": "outlookWeb",
										"type": "boolean"
									},
									{
										"key": "22",
										"name": "outlookMac",
										"type": "boolean"
									},
									{
										"key": "23",
										"name": "outlookWindows",
										"type": "boolean"
									},
									{
										"key": "24",
										"name": "powerPoint",
										"type": "boolean"
									},
									{
										"key": "25",
										"name": "powerPointMobile",
										"type": "boolean"
									},
									{
										"key": "26",
										"name": "powerPointWeb",
										"type": "boolean"
									},
									{
										"key": "27",
										"name": "powerPointMac",
										"type": "boolean"
									},
									{
										"key": "28",
										"name": "powerPointWindows",
										"type": "boolean"
									},
									{
										"key": "29",
										"name": "teams",
										"type": "boolean"
									},
									{
										"key": "30",
										"name": "teamsMobile",
										"type": "boolean"
									},
									{
										"key": "31",
										"name": "teamsWeb",
										"type": "boolean"
									},
									{
										"key": "32",
										"name": "teamsMac",
										"type": "boolean"
									},
									{
										"key": "33",
										"name": "teamsWindows",
										"type": "boolean"
									},
									{
										"key": "34",
										"name": "word",
										"type": "boolean"
									},
									{
										"key": "35",
										"name": "wordMobile",
										"type": "boolean"
									},
									{
										"key": "36",
										"name": "wordWeb",
										"type": "boolean"
									},
									{
										"key": "37",
										"name": "wordMac",
										"type": "boolean"
									},
									{
										"key": "38",
										"name": "wordWindows",
										"type": "boolean"
									}
								]
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"4"
									],
									"isStacked": false
								}
							}
						}
					},
					"3608020e-2288-4df7-a199-104e0b1577e8": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "ashleytodd20@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "paigetaylor11@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "joshuaelliott18@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "annaalvarado60@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "stacythompson16@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "lydiahunt39@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "christinahanna78@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "stevenlarsen30@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR FACULTY",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "annaalvarado10@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									},
									{
										"0": "0",
										"1": "0",
										"2": "OFFICE 365 A1 FOR STUDENTS",
										"3": "PT0S",
										"4": "0",
										"6": "false",
										"7": "false",
										"8": "true",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "180",
										"15": "2021-10-16",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "PT0S",
										"21": "0",
										"22": "zacharyjohnson64@contosoisd3.onmicrosoft.com",
										"23": "PT0S"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "adHocMeetingsAttendedCount",
										"type": "bigint"
									},
									{
										"key": "1",
										"name": "adHocMeetingsOrganizedCount",
										"type": "bigint"
									},
									{
										"key": "2",
										"name": "assignedProducts",
										"type": "string"
									},
									{
										"key": "3",
										"name": "audioDuration",
										"type": "string"
									},
									{
										"key": "4",
										"name": "callCount",
										"type": "bigint"
									},
									{
										"key": "5",
										"name": "deletedDate",
										"type": "string"
									},
									{
										"key": "6",
										"name": "hasOtherAction",
										"type": "boolean"
									},
									{
										"key": "7",
										"name": "isDeleted",
										"type": "boolean"
									},
									{
										"key": "8",
										"name": "isLicensed",
										"type": "boolean"
									},
									{
										"key": "9",
										"name": "lastActivityDate",
										"type": "string"
									},
									{
										"key": "10",
										"name": "meetingCount",
										"type": "bigint"
									},
									{
										"key": "11",
										"name": "meetingsAttendedCount",
										"type": "bigint"
									},
									{
										"key": "12",
										"name": "meetingsOrganizedCount",
										"type": "bigint"
									},
									{
										"key": "13",
										"name": "privateChatMessageCount",
										"type": "bigint"
									},
									{
										"key": "14",
										"name": "reportPeriod",
										"type": "string"
									},
									{
										"key": "15",
										"name": "reportRefreshDate",
										"type": "string"
									},
									{
										"key": "16",
										"name": "scheduledOneTimeMeetingsAttendedCount",
										"type": "bigint"
									},
									{
										"key": "17",
										"name": "scheduledOneTimeMeetingsOrganizedCount",
										"type": "bigint"
									},
									{
										"key": "18",
										"name": "scheduledRecurringMeetingsAttendedCount",
										"type": "bigint"
									},
									{
										"key": "19",
										"name": "scheduledRecurringMeetingsOrganizedCount",
										"type": "bigint"
									},
									{
										"key": "20",
										"name": "screenShareDuration",
										"type": "string"
									},
									{
										"key": "21",
										"name": "teamChatMessageCount",
										"type": "bigint"
									},
									{
										"key": "22",
										"name": "userPrincipalName",
										"type": "string"
									},
									{
										"key": "23",
										"name": "videoDuration",
										"type": "string"
									}
								]
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"2ae3ec23-152c-46cf-90dd-a150b0b2be75": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "ashleytodd20@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "paigetaylor11@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "joshuaelliott18@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "annaalvarado60@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "stacythompson16@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "lydiahunt39@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "christinahanna78@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "stevenlarsen30@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "annaalvarado10@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR FACULTY",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									},
									{
										"0": "zacharyjohnson64@contosoisd3.onmicrosoft.com",
										"2": "2021-10-16",
										"3": "180",
										"4": "false",
										"5": "true",
										"7": "false",
										"8": "OFFICE 365 A1 FOR STUDENTS",
										"9": "0",
										"10": "0",
										"11": "0",
										"12": "0",
										"13": "0",
										"14": "0",
										"15": "0",
										"16": "0",
										"17": "0",
										"18": "0",
										"19": "0",
										"20": "0",
										"21": "0",
										"22": "0",
										"23": "0"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "userPrincipalName",
										"type": "string"
									},
									{
										"key": "1",
										"name": "lastActivityDate",
										"type": "string"
									},
									{
										"key": "2",
										"name": "reportRefreshDate",
										"type": "string"
									},
									{
										"key": "3",
										"name": "reportPeriod",
										"type": "string"
									},
									{
										"key": "4",
										"name": "isDeleted",
										"type": "boolean"
									},
									{
										"key": "5",
										"name": "isLicensed",
										"type": "boolean"
									},
									{
										"key": "6",
										"name": "deletedDate",
										"type": "string"
									},
									{
										"key": "7",
										"name": "hasOtherAction",
										"type": "boolean"
									},
									{
										"key": "8",
										"name": "assignedProducts",
										"type": "string"
									},
									{
										"key": "9",
										"name": "adHocMeetingsAttendedCount",
										"type": "bigint"
									},
									{
										"key": "10",
										"name": "adHocMeetingsOrganizedCount",
										"type": "bigint"
									},
									{
										"key": "11",
										"name": "callCount",
										"type": "bigint"
									},
									{
										"key": "12",
										"name": "meetingCount",
										"type": "bigint"
									},
									{
										"key": "13",
										"name": "meetingsAttendedCount",
										"type": "bigint"
									},
									{
										"key": "14",
										"name": "meetingsOrganizedCount",
										"type": "bigint"
									},
									{
										"key": "15",
										"name": "privateChatMessageCount",
										"type": "bigint"
									},
									{
										"key": "16",
										"name": "scheduledOneTimeMeetingsAttendedCount",
										"type": "bigint"
									},
									{
										"key": "17",
										"name": "scheduledOneTimeMeetingsOrganizedCount",
										"type": "bigint"
									},
									{
										"key": "18",
										"name": "scheduledRecurringMeetingsAttendedCount",
										"type": "bigint"
									},
									{
										"key": "19",
										"name": "scheduledRecurringMeetingsOrganizedCount",
										"type": "bigint"
									},
									{
										"key": "20",
										"name": "screenShareDuration",
										"type": "int"
									},
									{
										"key": "21",
										"name": "teamChatMessageCount",
										"type": "bigint"
									},
									{
										"key": "22",
										"name": "videoDuration",
										"type": "int"
									},
									{
										"key": "23",
										"name": "audioDuration",
										"type": "int"
									}
								]
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"9"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-hybriddev2/providers/Microsoft.Synapse/workspaces/syn-oea-hybriddev2/bigDataPools/spark3p1sm",
				"name": "spark3p1sm",
				"type": "Spark",
				"endpoint": "https://syn-oea-hybriddev2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Graph API Module Example Notebook\r\n",
					"\r\n",
					"This notebook creates 3 tables (users, m365_app_user_detail and teams_acivity_user_details) into two new Spark databases called s2np_graphapi and s2p_graphapi.\r\n",
					"\r\n",
					"s2p_graphapi is utilized for the Graph Reports API PowerBI dashboard provided\r\n",
					""
				],
				"attachments": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Provision storage accounts\r\n",
					"\r\n",
					"The storage account variable has to be changed to the name of the storage account associated with your Azure resource group."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, DoubleType, ArrayType\r\n",
					"from pyspark.sql.functions import *\r\n",
					"from pyspark.sql.window import Window\r\n",
					"\r\n",
					"\r\n",
					"# data lake and container information\r\n",
					"storage_account = 'stoeahybriddev2'\r\n",
					"use_test_env = False\r\n",
					"\r\n",
					"if use_test_env:\r\n",
					"    stage1np = 'abfss://test-env@' + storage_account + '.dfs.core.windows.net/stage1np'\r\n",
					"    stage2np = 'abfss://test-env@' + storage_account + '.dfs.core.windows.net/stage2np'\r\n",
					"    stage2p = 'abfss://test-env@' + storage_account + '.dfs.core.windows.net/stage2p'\r\n",
					"else:\r\n",
					"    stage1np = 'abfss://stage1np@' + storage_account + '.dfs.core.windows.net'\r\n",
					"    stage2np = 'abfss://stage2np@' + storage_account + '.dfs.core.windows.net'\r\n",
					"    stage2p = 'abfss://stage2p@' + storage_account + '.dfs.core.windows.net'"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Load Raw Data from Lake\r\n",
					"To ensure that that the right tables are loaded, confirm that the file paths match your data lake storage containers. \r\n",
					"\r\n",
					"The top code-block defines the user schema of the stage 1 JSON file(s) stored."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# schemas for each of the JSON files for transformation into tables\r\n",
					"user_schema = StructType(fields=[\r\n",
					"    StructField('value', ArrayType(\r\n",
					"        StructType([\r\n",
					"            StructField('surname', StringType(), False),\r\n",
					"            StructField('givenName', StringType(), False),\r\n",
					"            StructField('userPrincipalName', StringType(), False),\r\n",
					"            StructField('id', StringType(), False)\r\n",
					"        ])\r\n",
					"    ))\r\n",
					"])"
				],
				"attachments": null,
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# load needed tables from JSON data lake storage\r\n",
					"dfUsersRaw = spark.read.format('json').load(f'{stage1np}/GraphAPI/Users/*.json', schema=user_schema)\r\n",
					"dfM365UserActivityRaw = spark.read.format('json').load(f'{stage1np}/GraphAPI/M365_App_User_Detail/*.json')\r\n",
					"dfTeamsUserActivityRaw = spark.read.format('json').load(f'{stage1np}/GraphAPI/Teams_Activity_User_Detail/*.json')"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## 1. Users table\r\n",
					"Contains all users (students and teachers) at a school-system level\r\n",
					"\r\n",
					"** Databases and tables used: **\r\n",
					"\r\n",
					" - None \r\n",
					" \r\n",
					"**JSON files used:**\r\n",
					"\r\n",
					"- GraphAPI/Users/*.json\r\n",
					"\r\n",
					"**Database and table created:**\r\n",
					"\r\n",
					"1. Spark DB: s2p_graphapi\r\n",
					"- Table: users\r\n",
					"2. Spark DB: s2np_graphapi\r\n",
					"- Table: users"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"dfUsers = dfUsersRaw.select(explode('value').alias('exploded_values')).select(\"exploded_values.*\")\r\n",
					"display(dfUsers.limit(10))"
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Write Data Back to Lake\r\n",
					"\r\n",
					"### Writing to Stage 2np"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# write back to the lake in stage 2 ds2_main directory\r\n",
					"dfUsers.write.format('parquet').mode('overwrite').save(stage2np + '/GraphAPI/Users')"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Writing to Stage 2p\r\n",
					"Pseudonymizing users data"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run /OEA_py"
				],
				"attachments": null,
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"oea = OEA()\r\n",
					"\r\n",
					"usersSchema = [['surname', 'string', 'mask'],\r\n",
					"                        ['givenName', 'string', 'mask'],\r\n",
					"                        ['userPrincipalName', 'string', 'hash'],\r\n",
					"                        ['id', 'string', 'mask']]\r\n",
					"\r\n",
					"df_pseudo, df_lookup = oea.pseudonymize(dfUsers, usersSchema)\r\n",
					"\r\n",
					"df_pseudo.write.format('parquet').mode('overwrite').save(stage2p + '/GraphAPI/Users')"
				],
				"attachments": null,
				"execution_count": 8
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Load to Spark DB"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create spark db to allow for access to the data in the delta-lake via SQL on-demand.\r\n",
					"# This is only creating metadata for SQL on-demand, pointing to the data in the delta-lake.\r\n",
					"# This also makes it possible to connect in Power BI via the azure sql data source connector.\r\n",
					"def create_spark_db(db_name, source_path):\r\n",
					"    spark.sql(f'CREATE DATABASE IF NOT EXISTS {db_name}')\r\n",
					"    spark.sql(f\"DROP TABLE IF EXISTS {db_name}.users\")\r\n",
					"    spark.sql(f\"create table if not exists {db_name}.users using PARQUET location '{source_path}'\")\r\n",
					"    \r\n",
					"create_spark_db('s2np_graphapi', stage2np + '/GraphAPI/Users')\r\n",
					"create_spark_db('s2p_graphapi', stage2p + '/GraphAPI/Users')"
				],
				"attachments": null,
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## 2. M365_app_user_detail table\r\n",
					"Contains a sample m365 table to support data analysis in a Power BI dashboard.\r\n",
					"\r\n",
					"**Databases and tables used:**\r\n",
					"- None\r\n",
					"\r\n",
					"**JSON files used:**\r\n",
					"\r\n",
					"- GraphAPI/M365_App_User_Detail/*.json\r\n",
					"\r\n",
					"**Database and table created:**\r\n",
					"\r\n",
					"1. Spark DB: s2p_graphapi\r\n",
					"- Table: m365_app_user_detail\r\n",
					"2. Spark DB: s2np_graphapi\r\n",
					"- Table: m365_app_user_detail\r\n",
					""
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"dfM365UserActivity = dfM365UserActivityRaw.select(explode('value').alias('exploded_values')).select(\"exploded_values.*\")"
				],
				"attachments": null,
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Processing m365 activity \"details\" data \r\n",
					"This code block moves the relevant data from \"details\" and allocates them into their respective columns."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"import pyspark.sql.functions as f\r\n",
					"\r\n",
					"dfM365UserActivity = dfM365UserActivity.withColumn('reportPeriod', f.explode(f.col('details').reportPeriod)) \\\r\n",
					"                        .withColumn('mobile', f.explode(f.col('details').mobile)) \\\r\n",
					"                        .withColumn('web', f.explode(f.col('details').web)) \\\r\n",
					"                        .withColumn('mac', f.explode(f.col('details').mac)) \\\r\n",
					"                        .withColumn('windows', f.explode(f.col('details').windows)) \\\r\n",
					"                        .withColumn('excel', f.explode(f.col('details').excel)) \\\r\n",
					"                        .withColumn('excelMobile', f.explode(f.col('details').excelMobile)) \\\r\n",
					"                        .withColumn('excelWeb', f.explode(f.col('details').excelWeb)) \\\r\n",
					"                        .withColumn('excelMac', f.explode(f.col('details').excelMac)) \\\r\n",
					"                        .withColumn('excelWindows', f.explode(f.col('details').excelWindows)) \\\r\n",
					"                        .withColumn('oneNote', f.explode(f.col('details').oneNote)) \\\r\n",
					"                        .withColumn('oneNoteMobile', f.explode(f.col('details').oneNoteMobile)) \\\r\n",
					"                        .withColumn('oneNoteWeb', f.explode(f.col('details').oneNoteWeb)) \\\r\n",
					"                        .withColumn('oneNoteMac', f.explode(f.col('details').oneNoteMac)) \\\r\n",
					"                        .withColumn('oneNoteWindows', f.explode(f.col('details').oneNoteWindows)) \\\r\n",
					"                        .withColumn('outlook', f.explode(f.col('details').outlook)) \\\r\n",
					"                        .withColumn('outlookMobile', f.explode(f.col('details').outlookMobile)) \\\r\n",
					"                        .withColumn('outlookWeb', f.explode(f.col('details').outlookWeb)) \\\r\n",
					"                        .withColumn('outlookMac', f.explode(f.col('details').outlookMac)) \\\r\n",
					"                        .withColumn('outlookWindows', f.explode(f.col('details').outlookWindows)) \\\r\n",
					"                        .withColumn('powerPoint', f.explode(f.col('details').powerPoint)) \\\r\n",
					"                        .withColumn('powerPointMobile', f.explode(f.col('details').powerPointMobile)) \\\r\n",
					"                        .withColumn('powerPointWeb', f.explode(f.col('details').powerPointWeb)) \\\r\n",
					"                        .withColumn('powerPointMac', f.explode(f.col('details').powerPointMac)) \\\r\n",
					"                        .withColumn('powerPointWindows', f.explode(f.col('details').powerPointWindows)) \\\r\n",
					"                        .withColumn('teams', f.explode(f.col('details').teams)) \\\r\n",
					"                        .withColumn('teamsMobile', f.explode(f.col('details').teamsMobile)) \\\r\n",
					"                        .withColumn('teamsWeb', f.explode(f.col('details').teamsWeb)) \\\r\n",
					"                        .withColumn('teamsMac', f.explode(f.col('details').teamsMac)) \\\r\n",
					"                        .withColumn('teamsWindows', f.explode(f.col('details').teamsWindows)) \\\r\n",
					"                        .withColumn('word', f.explode(f.col('details').word)) \\\r\n",
					"                        .withColumn('wordMobile', f.explode(f.col('details').wordMobile)) \\\r\n",
					"                        .withColumn('wordWeb', f.explode(f.col('details').wordWeb)) \\\r\n",
					"                        .withColumn('wordMac', f.explode(f.col('details').wordMac)) \\\r\n",
					"                        .withColumn('wordWindows', f.explode(f.col('details').wordWindows)) \\\r\n",
					"                        .drop('details')\r\n",
					"\r\n",
					"display(dfM365UserActivity.limit(10))"
				],
				"attachments": null,
				"execution_count": 12
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Write Data Back to Lake"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# write back to the lake in stage 2 ds2_main directory\r\n",
					"dfM365UserActivity = dfM365UserActivity.withColumn('reportRefreshDate', to_date(col('reportRefreshDate'), 'yyyy-MM-dd'))\r\n",
					"dfM365UserActivity = dfM365UserActivity.withColumn('lastActivityDate', to_date(col('lastActivityDate'), 'yyyy-MM-dd'))\r\n",
					"dfM365UserActivity = dfM365UserActivity.withColumn('lastActivationDate', to_date(col('lastActivationDate'), 'yyyy-MM-dd'))\r\n",
					"dfM365UserActivity.write.format('parquet').mode('overwrite').save(stage2np + '/GraphAPI/M365_App_User_Detail')"
				],
				"attachments": null,
				"execution_count": 13
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Writing to Stage 2p\r\n",
					"Pseudonymizing M365 data"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"m365Schema = [['reportRefreshDate', 'date', 'no-op'],\r\n",
					"                        ['userPrincipalName', 'string', 'hash'],\r\n",
					"                        ['lastActivityDate', 'date', 'no-op'],\r\n",
					"                        ['reportPeriod', 'string', 'no-op'],\r\n",
					"                        ['mobile', 'boolean', 'no-op'],\r\n",
					"                        ['web', 'boolean', 'no-op'],\r\n",
					"                        ['mac', 'boolean', 'no-op'],\r\n",
					"                        ['windows', 'boolean', 'no-op'],\r\n",
					"                        ['excel', 'boolean', 'no-op'],\r\n",
					"                        ['excelMac', 'boolean', 'no-op'],\r\n",
					"                        ['excelMobile', 'boolean', 'no-op'],\r\n",
					"                        ['excelWeb', 'boolean', 'no-op'],\r\n",
					"                        ['excelWindows', 'boolean', 'no-op'],\r\n",
					"                        ['oneNote', 'boolean', 'no-op'],\r\n",
					"                        ['oneNoteMac', 'boolean', 'no-op'],\r\n",
					"                        ['oneNoteMobile', 'boolean', 'no-op'],\r\n",
					"                        ['oneNoteWeb', 'boolean', 'no-op'],\r\n",
					"                        ['oneNoteWindows', 'boolean', 'no-op'],\r\n",
					"                        ['outlook', 'boolean', 'no-op'],\r\n",
					"                        ['outlookMac', 'boolean', 'no-op'],\r\n",
					"                        ['outlookMobile', 'boolean', 'no-op'],\r\n",
					"                        ['outlookWeb', 'boolean', 'no-op'],\r\n",
					"                        ['outlookWindows', 'boolean', 'no-op'],\r\n",
					"                        ['powerPoint', 'boolean', 'no-op'],\r\n",
					"                        ['powerPointMac', 'boolean', 'no-op'],\r\n",
					"                        ['powerPointMobile', 'boolean', 'no-op'],\r\n",
					"                        ['powerPointWeb', 'boolean', 'no-op'],\r\n",
					"                        ['powerPointWindows', 'boolean', 'no-op'],\r\n",
					"                        ['teams', 'boolean', 'no-op'],\r\n",
					"                        ['teamsMac', 'boolean', 'no-op'],\r\n",
					"                        ['teamsMobile', 'boolean', 'no-op'],\r\n",
					"                        ['teamsWeb', 'boolean', 'no-op'],\r\n",
					"                        ['teamsWindows', 'boolean', 'no-op'],\r\n",
					"                        ['word', 'boolean', 'no-op'],\r\n",
					"                        ['wordMac', 'boolean', 'no-op'],\r\n",
					"                        ['wordMobile', 'boolean', 'no-op'],\r\n",
					"                        ['wordWeb', 'boolean', 'no-op'],\r\n",
					"                        ['wordWindows', 'boolean', 'no-op']\r\n",
					"                       ]\r\n",
					"\r\n",
					"\r\n",
					"df_pseudo, df_lookup = oea.pseudonymize(dfM365UserActivity, m365Schema)\r\n",
					"\r\n",
					"df_pseudo.write.format('parquet').mode('overwrite').save(stage2p + '/GraphAPI/M365_App_User_Detail')"
				],
				"attachments": null,
				"execution_count": 14
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Load to Spark DB"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create spark db to allow for access to the data in the delta-lake via SQL on-demand.\r\n",
					"# This is only creating metadata for SQL on-demand, pointing to the data in the delta-lake.\r\n",
					"# This also makes it possible to connect in Power BI via the azure sql data source connector.\r\n",
					"def create_spark_db(db_name, source_path):\r\n",
					"    spark.sql(f'CREATE DATABASE IF NOT EXISTS {db_name}')\r\n",
					"    spark.sql(f\"DROP TABLE IF EXISTS {db_name}.m365_app_user_detail\")\r\n",
					"    spark.sql(f\"create table if not exists {db_name}.m365_app_user_detail using PARQUET location '{source_path}'\")\r\n",
					"    \r\n",
					"create_spark_db('s2np_graphapi', stage2np + '/GraphAPI/M365_App_User_Detail')\r\n",
					"create_spark_db('s2p_graphapi', stage2p + '/GraphAPI/M365_App_User_Detail')"
				],
				"attachments": null,
				"execution_count": 15
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## 3. Teams_activity_user_details table\r\n",
					"Contains a sample Teams table to support data analysis in a Power BI dashboard.\r\n",
					"\r\n",
					"**Databases and tables used:**\r\n",
					"- None\r\n",
					"\r\n",
					"**JSON files used:**\r\n",
					"- GraphAPI/Teams_Activity_User_Detail/*.json\r\n",
					"\r\n",
					"**Database and table created:**\r\n",
					"\r\n",
					"1. Spark DB: s2p_graphapi\r\n",
					"- Table: teams_activity_user_details\r\n",
					"2. Spark DB: s2np_graphapi\r\n",
					"- Table: teams_activity_user_details"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"dfTeamsUserActivity = dfTeamsUserActivityRaw.select(explode('value').alias('exploded_values')).select(\"exploded_values.*\")\r\n",
					"dfTeamsUserActivity = dfTeamsUserActivity.withColumn('assignedProducts', f.explode(f.col('assignedProducts')))\r\n",
					"dfTeamsUserActivity = dfTeamsUserActivity.drop('@odata.type')\r\n",
					"display(dfTeamsUserActivity.limit(10))"
				],
				"attachments": null,
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dfTeamsUserActivity = dfTeamsUserActivity.select('userPrincipalName','lastActivityDate','reportRefreshDate', 'reportPeriod','isDeleted', 'isLicensed', \r\n",
					"'deletedDate', 'hasOtherAction', 'assignedProducts',\r\n",
					"'adHocMeetingsAttendedCount', 'adHocMeetingsOrganizedCount',  'callCount', 'meetingCount',\r\n",
					" 'meetingsAttendedCount', 'meetingsOrganizedCount', 'privateChatMessageCount',  'scheduledOneTimeMeetingsAttendedCount', \r\n",
					"'scheduledOneTimeMeetingsOrganizedCount', 'scheduledRecurringMeetingsAttendedCount', 'scheduledRecurringMeetingsOrganizedCount',\r\n",
					" 'screenShareDuration', 'teamChatMessageCount', 'videoDuration','audioDuration')"
				],
				"attachments": null,
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# convert duration to second only\r\n",
					"dfTeamsUserActivity = dfTeamsUserActivity.withColumn(\r\n",
					"    'screenShareDuration', \r\n",
					"    F.coalesce(F.regexp_extract('screenShareDuration', r'(\\d+)H', 1).cast('int'), F.lit(0)) * 3600 + \r\n",
					"    F.coalesce(F.regexp_extract('screenShareDuration', r'(\\d+)M', 1).cast('int'), F.lit(0)) * 60 + \r\n",
					"    F.coalesce(F.regexp_extract('screenShareDuration', r'(\\d+)S', 1).cast('int'), F.lit(0))\r\n",
					"    ).withColumn(\r\n",
					"    'videoDuration', \r\n",
					"    F.coalesce(F.regexp_extract('videoDuration', r'(\\d+)H', 1).cast('int'), F.lit(0)) * 3600 + \r\n",
					"    F.coalesce(F.regexp_extract('videoDuration', r'(\\d+)M', 1).cast('int'), F.lit(0)) * 60 + \r\n",
					"    F.coalesce(F.regexp_extract('videoDuration', r'(\\d+)S', 1).cast('int'), F.lit(0))\r\n",
					"    ).withColumn(\r\n",
					"    'audioDuration', \r\n",
					"    F.coalesce(F.regexp_extract('audioDuration', r'(\\d+)H', 1).cast('int'), F.lit(0)) * 3600 + \r\n",
					"    F.coalesce(F.regexp_extract('audioDuration', r'(\\d+)M', 1).cast('int'), F.lit(0)) * 60 + \r\n",
					"    F.coalesce(F.regexp_extract('audioDuration', r'(\\d+)S', 1).cast('int'), F.lit(0))\r\n",
					"    )\r\n",
					"display(dfTeamsUserActivity.limit(10))"
				],
				"attachments": null,
				"execution_count": 21
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Write Data Back to Lake"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# write back to the lake in stage 2 ds2_main directory\r\n",
					"dfTeamsUserActivity = dfTeamsUserActivity.withColumn('reportRefreshDate', to_date(col('reportRefreshDate'), 'yyyy-MM-dd'))\r\n",
					"dfTeamsUserActivity = dfTeamsUserActivity.withColumn('deletedDate', to_date(col('deletedDate'), 'yyyy-MM-dd'))\r\n",
					"dfTeamsUserActivity.write.format('parquet').mode('overwrite').save(stage2np + '/GraphAPI/Teams_Activity_User_Detail')"
				],
				"attachments": null,
				"execution_count": 22
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Writing to Stage 2p\r\n",
					"Pseudonymizing Teams data"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"teamsSchema = [['reportRefreshDate', 'string', 'no-op'],\r\n",
					"                        ['lasActivityDate', 'string', 'no-op'],\r\n",
					"                        ['deletedDate', 'integer', 'no-op'],\r\n",
					"                        ['isDeleted', 'string', 'no-op'],\r\n",
					"                        ['isLiscenced', 'string', 'no-op'],                        \r\n",
					"                        ['reportPeriod', 'string', 'no-op'],\r\n",
					"                        ['userPrincipalName', 'string', 'hash'],\r\n",
					"                        ['privateChatMessageCount', 'integer', 'no-op'],\r\n",
					"                        ['teamChatMessageCount', 'integer', 'no-op'],\r\n",
					"                        ['meetingsAttendedCount', 'integer', 'no-op'],\r\n",
					"                        ['meetingCount', 'integer', 'no-op'],\r\n",
					"                        ['meetingsOrganizedCount', 'integer', 'no-op'],                        \r\n",
					"                        ['callCount', 'integer', 'no-op'],\r\n",
					"                        ['audioDuration', 'string', 'no-op'],\r\n",
					"                        ['videoDuration', 'string', 'no-op'],\r\n",
					"                        ['screenShareDuration', 'string', 'no-op'],                        \r\n",
					"                        ['scheduledOneTimeMeetingsAttendedCount', 'integer', 'no-op'],\r\n",
					"                        ['scheduledOneTimeMeetingsOrganizedCount', 'string', 'no-op'],\r\n",
					"                        ['scheduledRecurringMeetingsAttendedCount', 'string', 'no-op'],\r\n",
					"                        ['scheduledRecurringMeetingsOrganizedCount', 'string', 'no-op'],\r\n",
					"                        ['adHocMeetingsAttendedCount', 'string', 'no-op'],\r\n",
					"                        ['adHocMeetingsOrganizedCount', 'string', 'no-op'],\r\n",
					"                        ['assignedProducts', 'string', 'no-op'],\r\n",
					"                        ['hasOtherAction', 'string', 'no-op']]\r\n",
					"\r\n",
					"df_pseudo, df_lookup = oea.pseudonymize(dfTeamsUserActivity, teamsSchema)\r\n",
					"\r\n",
					"df_pseudo.write.format('parquet').mode('overwrite').save(stage2p + '/GraphAPI/Teams_Activity_User_Detail')"
				],
				"attachments": null,
				"execution_count": 23
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Load to Spark DB"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create spark db to allow for access to the data in the delta-lake via SQL on-demand.\r\n",
					"# This is only creating metadata for SQL on-demand, pointing to the data in the delta-lake.\r\n",
					"# This also makes it possible to connect in Power BI via the azure sql data source connector.\r\n",
					"def create_spark_db(db_name, source_path):\r\n",
					"    spark.sql(f'CREATE DATABASE IF NOT EXISTS {db_name}')\r\n",
					"    spark.sql(f\"DROP TABLE IF EXISTS {db_name}.teams_activity_user_details\")\r\n",
					"    spark.sql(f\"create table if not exists {db_name}.teams_activity_user_details using PARQUET location '{source_path}'\")\r\n",
					"    \r\n",
					"create_spark_db('s2np_graphapi', stage2np + '/GraphAPI/Teams_Activity_User_Detail')\r\n",
					"create_spark_db('s2p_graphapi', stage2p + '/GraphAPI/Teams_Activity_User_Detail')"
				],
				"attachments": null,
				"execution_count": 24
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Reset Data Processing\r\n",
					"\r\n",
					"Uncomment the last line in order to reset the data processing from this notebook (this drops both spark databases: s2np_graphapi and s2p_graphapi)"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def reset_all_processing():\r\n",
					"    oea.rm_if_exists(stage2np + '/GraphAPI')\r\n",
					"    oea.rm_if_exists(stage2p + '/GraphAPI')\r\n",
					"    oea.drop_db('s2np_graphapi')\r\n",
					"    oea.drop_db('s2p_graphapi')\r\n",
					"\r\n",
					"#reset_all_processing()"
				],
				"attachments": null,
				"execution_count": 32
			}
		]
	}
}