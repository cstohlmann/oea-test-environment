{
	"name": "Intune_module_setup",
	"properties": {
		"folder": {
			"name": "Internal Hackathon"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "medium",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "6554bb40-f6d5-45a4-b5c3-149b8a5ae2ab"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"0fd3e91c-73ee-4543-8ff9-6a3dcfbe34ce": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "DESKTOP-M5HCKFC",
										"1": "Intune",
										"2": "School",
										"3": "Compliant",
										"4": "Windows",
										"5": "10.0.21692.1000",
										"6": "2021-06-01 14:19:07.1733099",
										"7": "debrasmith1@contosoisd3.onmicrosoft.com",
										"8": "8feeb0b7-7e88-4ca2-9a12-9a79b604010e"
									},
									{
										"0": "DESKTOP-KQOEDOR",
										"1": "Intune",
										"2": "School",
										"3": "Compliant",
										"4": "iOS/iPadOS",
										"5": "10.0.22000.100",
										"6": "2021-08-05 18:09:59.1314562",
										"7": "josephlynch26@contosoisd3.onmicrosoft.com",
										"8": "5662e819-1ade-4de8-b013-155e8a9a2f0f"
									},
									{
										"0": "DESKTOP-O1BG8QB",
										"1": "Intune",
										"2": "Personal",
										"3": "Compliant",
										"4": "Windows",
										"5": "10.0.21380.1",
										"6": "2021-07-19 20:53:28.0081679",
										"7": "jennifermayer2@contosoisd3.onmicrosoft.com",
										"8": "e911c8bc-31ac-4096-926b-d15a70bd5bd9"
									},
									{
										"0": "HARLEYH-SVEDU",
										"1": "Intune",
										"2": "Personal",
										"3": "Compliant",
										"4": "Windows",
										"5": "10.0.21990.1",
										"6": "2021-06-03 06:48:05.7911489",
										"7": "williamcarpenter48@contosoisd3.onmicrosoft.com",
										"8": "5318350b-d4e6-41ca-ba0c-3656cf85ec53"
									},
									{
										"0": "cacarras_Windows_7/22/2021_11:10 PM",
										"1": "Intune",
										"2": "Unknown",
										"3": "Compliant",
										"4": "macOS",
										"5": "0.0.0.0",
										"6": "2021-07-23 00:58:12.0000000",
										"7": "abigaillong3@contosoisd3.onmicrosoft.com",
										"8": "20a894d2-0cdb-4a46-87e9-88f371f112a9"
									},
									{
										"0": "DESKTOP-NJNOAB6",
										"1": "Intune",
										"2": "School",
										"3": "Compliant",
										"4": "macOS",
										"5": "10.0.21382.1",
										"6": "2021-05-14 10:01:08.0000000",
										"7": "lisaalexander51@contosoisd3.onmicrosoft.com",
										"8": "88787e75-b837-4ad7-a190-4de321eece4f"
									},
									{
										"0": "FLUBBERGHASTED",
										"1": "Intune",
										"2": "Personal",
										"3": "Compliant",
										"4": "macOS",
										"5": "10.0.22000.194",
										"6": "2021-10-10 15:28:00.0000000",
										"7": "josephkelley4@contosoisd3.onmicrosoft.com",
										"8": "5267644d-7869-4a29-b340-76695311129b"
									},
									{
										"0": "adbr_Windows_10/1/2021_11:16 PM",
										"1": "Intune",
										"2": "Unknown",
										"3": "Not Evaluated",
										"4": "macOS",
										"5": "0.0.0.0",
										"6": "2021-10-02 00:34:02.0000000",
										"7": "zacharyjohnson64@contosoisd3.onmicrosoft.com",
										"8": "16552338-ad38-49bf-be03-61cc545360e1"
									},
									{
										"0": "BEAU-LNVO-N23",
										"1": "Intune",
										"2": "School",
										"3": "Compliant",
										"4": "Windows",
										"5": "10.0.22000.65",
										"6": "2021-07-12 20:06:52.0000000",
										"7": "amberbuchanan5@contosoisd3.onmicrosoft.com",
										"8": "4dc2feb4-79ba-4d15-a3ad-8c7efdacbc8b"
									},
									{
										"0": "TapValidation_Windows_9/21/2021_6:07 PM",
										"1": "Intune",
										"2": "Unknown",
										"3": "Compliant",
										"4": "Windows",
										"5": "0.0.0.0",
										"6": "2021-09-21 18:07:48.0000000",
										"7": "chadjones8@contosoisd3.onmicrosoft.com",
										"8": "5c21ded0-959c-49a1-bed2-263f25ef1f30"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "DeviceName",
										"type": "string"
									},
									{
										"key": "1",
										"name": "ManagedBy",
										"type": "string"
									},
									{
										"key": "2",
										"name": "Ownership",
										"type": "string"
									},
									{
										"key": "3",
										"name": "Compliance",
										"type": "string"
									},
									{
										"key": "4",
										"name": "OS",
										"type": "string"
									},
									{
										"key": "5",
										"name": "OSVersion",
										"type": "string"
									},
									{
										"key": "6",
										"name": "LastCheckIn",
										"type": "string"
									},
									{
										"key": "7",
										"name": "PrimaryUserUPN",
										"type": "string"
									},
									{
										"key": "8",
										"name": "DeviceID",
										"type": "string"
									}
								]
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"26a06c19-36fe-4dba-b35a-ea482711c51c": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "DESKTOP-M5HCKFC",
										"1": "Intune",
										"2": "School",
										"3": "Compliant",
										"4": "Windows",
										"5": "10.0.21692.1000",
										"6": "2021-06-01 14:19:07.1733099",
										"7": "debrasmith1@contosoisd3.onmicrosoft.com",
										"8": "8feeb0b7-7e88-4ca2-9a12-9a79b604010e",
										"9": "false"
									},
									{
										"0": "DESKTOP-KQOEDOR",
										"1": "Intune",
										"2": "School",
										"3": "Compliant",
										"4": "iOS/iPadOS",
										"5": "10.0.22000.100",
										"6": "2021-08-05 18:09:59.1314562",
										"7": "josephlynch26@contosoisd3.onmicrosoft.com",
										"8": "5662e819-1ade-4de8-b013-155e8a9a2f0f",
										"9": "true"
									},
									{
										"0": "DESKTOP-O1BG8QB",
										"1": "Intune",
										"2": "Personal",
										"3": "Compliant",
										"4": "Windows",
										"5": "10.0.21380.1",
										"6": "2021-07-19 20:53:28.0081679",
										"7": "jennifermayer2@contosoisd3.onmicrosoft.com",
										"8": "e911c8bc-31ac-4096-926b-d15a70bd5bd9",
										"9": "true"
									},
									{
										"0": "HARLEYH-SVEDU",
										"1": "Intune",
										"2": "Personal",
										"3": "Compliant",
										"4": "Windows",
										"5": "10.0.21990.1",
										"6": "2021-06-03 06:48:05.7911489",
										"7": "williamcarpenter48@contosoisd3.onmicrosoft.com",
										"8": "5318350b-d4e6-41ca-ba0c-3656cf85ec53",
										"9": "true"
									},
									{
										"0": "cacarras_Windows_7/22/2021_11:10 PM",
										"1": "Intune",
										"2": "Unknown",
										"3": "Compliant",
										"4": "macOS",
										"5": "0.0.0.0",
										"6": "2021-07-23 00:58:12.0000000",
										"7": "abigaillong3@contosoisd3.onmicrosoft.com",
										"8": "20a894d2-0cdb-4a46-87e9-88f371f112a9",
										"9": "true"
									},
									{
										"0": "DESKTOP-NJNOAB6",
										"1": "Intune",
										"2": "School",
										"3": "Compliant",
										"4": "macOS",
										"5": "10.0.21382.1",
										"6": "2021-05-14 10:01:08.0000000",
										"7": "lisaalexander51@contosoisd3.onmicrosoft.com",
										"8": "88787e75-b837-4ad7-a190-4de321eece4f",
										"9": "false"
									},
									{
										"0": "FLUBBERGHASTED",
										"1": "Intune",
										"2": "Personal",
										"3": "Compliant",
										"4": "macOS",
										"5": "10.0.22000.194",
										"6": "2021-10-10 15:28:00.0000000",
										"7": "josephkelley4@contosoisd3.onmicrosoft.com",
										"8": "5267644d-7869-4a29-b340-76695311129b",
										"9": "true"
									},
									{
										"0": "adbr_Windows_10/1/2021_11:16 PM",
										"1": "Intune",
										"2": "Unknown",
										"3": "Not Evaluated",
										"4": "macOS",
										"5": "0.0.0.0",
										"6": "2021-10-02 00:34:02.0000000",
										"7": "zacharyjohnson64@contosoisd3.onmicrosoft.com",
										"8": "16552338-ad38-49bf-be03-61cc545360e1",
										"9": "true"
									},
									{
										"0": "BEAU-LNVO-N23",
										"1": "Intune",
										"2": "School",
										"3": "Compliant",
										"4": "Windows",
										"5": "10.0.22000.65",
										"6": "2021-07-12 20:06:52.0000000",
										"7": "amberbuchanan5@contosoisd3.onmicrosoft.com",
										"8": "4dc2feb4-79ba-4d15-a3ad-8c7efdacbc8b",
										"9": "true"
									},
									{
										"0": "TapValidation_Windows_9/21/2021_6:07 PM",
										"1": "Intune",
										"2": "Unknown",
										"3": "Compliant",
										"4": "Windows",
										"5": "0.0.0.0",
										"6": "2021-09-21 18:07:48.0000000",
										"7": "chadjones8@contosoisd3.onmicrosoft.com",
										"8": "5c21ded0-959c-49a1-bed2-263f25ef1f30",
										"9": "true"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "DeviceName",
										"type": "string"
									},
									{
										"key": "1",
										"name": "ManagedBy",
										"type": "string"
									},
									{
										"key": "2",
										"name": "Ownership",
										"type": "string"
									},
									{
										"key": "3",
										"name": "Compliance",
										"type": "string"
									},
									{
										"key": "4",
										"name": "OS",
										"type": "string"
									},
									{
										"key": "5",
										"name": "OSVersion",
										"type": "string"
									},
									{
										"key": "6",
										"name": "LastCheckIn",
										"type": "string"
									},
									{
										"key": "7",
										"name": "PrimaryUserUPN",
										"type": "string"
									},
									{
										"key": "8",
										"name": "DeviceID",
										"type": "string"
									},
									{
										"key": "9",
										"name": "AccessOutsideOfSchool",
										"type": "string"
									}
								]
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-hybriddev2/providers/Microsoft.Synapse/workspaces/syn-oea-hybriddev2/bigDataPools/medium",
				"name": "medium",
				"type": "Spark",
				"endpoint": "https://syn-oea-hybriddev2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/medium",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Intune Module Setup Example Notebook\r\n",
					"\r\n",
					"This notebook creates 1 table (devices) into a two new Spark databases called s2p_intune and s2np_intune. \r\n",
					"\r\n",
					"Attach this notebook to your configured spark pool, and click \"Run all\" for the initial module setup (outlined in the tutorial)."
				],
				"attachments": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Provision storage accounts\r\n",
					"\r\n",
					"The storage account variable has to be changed to the name of the storage account associated with your Azure resource group."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, DoubleType, ArrayType, TimestampType\r\n",
					"from pyspark.sql.functions import *\r\n",
					"from pyspark.sql.window import Window\r\n",
					"\r\n",
					"\r\n",
					"# data lake and container information\r\n",
					"storage_account = 'stoeadaihackathon'\r\n",
					"use_test_env = False\r\n",
					"\r\n",
					"if use_test_env:\r\n",
					"    stage1np = 'abfss://test-env@' + storage_account + '.dfs.core.windows.net/stage1np'\r\n",
					"    stage2np = 'abfss://test-env@' + storage_account + '.dfs.core.windows.net/stage2np'\r\n",
					"    stage2p = 'abfss://test-env@' + storage_account + '.dfs.core.windows.net/stage2p'\r\n",
					"else:\r\n",
					"    stage1np = 'abfss://stage1np@' + storage_account + '.dfs.core.windows.net'\r\n",
					"    stage2np = 'abfss://stage2np@' + storage_account + '.dfs.core.windows.net'\r\n",
					"    stage2p = 'abfss://stage2p@' + storage_account + '.dfs.core.windows.net'"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Load Raw Data from Lake\r\n",
					"To ensure that that the right tables are loaded, confirm that the file paths match your data lake storage containers. \r\n",
					"\r\n",
					"Make sure to reference either the tutorial guide or the note below, as the current notebook setup for this module reads *.csv rather than a specific CSV file."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# load needed device table from the CSV in the data lake storage\r\n",
					"# Note: you can change the \"*.csv\" to the specific devices CSV file name (which is generated as the date and time of the pipeline trigger)\r\n",
					"dfIntuneDevices = spark.read.format('csv').load(f'{stage1np}/intune/devices/*.csv', header='true')"
				],
				"attachments": null,
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## 1. Devices table\r\n",
					"Contains all devices (from students and teachers) at a school-system level\r\n",
					"\r\n",
					"** Databases and tables used: **\r\n",
					"\r\n",
					" - None\r\n",
					"\r\n",
					"**CSV files used:**\r\n",
					"\r\n",
					"- the file from: stage1np/intune/devices/*.csv\r\n",
					"\r\n",
					"**Database and table created:**\r\n",
					"\r\n",
					"1. Spark DB: s2p_intune\r\n",
					"- Table: devices\r\n",
					"2. Spark DB: s2np_intune\r\n",
					"- Table: devices"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(dfIntuneDevices.limit(10))"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Rename the column names to be get rid of hyphens and spaces\r\n",
					"Uncomment the cell below if you have triggered the pipeline and wish to ingest your own data, rather than the test data."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#dfIntuneDevices = dfIntuneDevices.withColumnRenamed('Device name', 'DeviceName').withColumnRenamed('Managed by', 'ManagedBy')\r\n",
					"#dfIntuneDevices = dfIntuneDevices.withColumnRenamed('OS version', 'OSVersion').withColumnRenamed('Last check-in', 'LastCheckIn')\r\n",
					"#dfIntuneDevices = dfIntuneDevices.withColumnRenamed('Primary user UPN', 'PrimaryUserUPN').withColumnRenamed('Device ID', 'DeviceID')"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Add an additional column \"accessOutsideOfSchool\"\r\n",
					"\r\n",
					"This \"accessOutsideOfSchool\" column uses the \"lastCheckIn\" column information to determine if a specific student's device has access outside of school, based on the conditions:\r\n",
					"\r\n",
					" - If the last check in was on a weekend (i.e. Saturday or Sunday), then \"accessOutsideOfSchool\" is true.\r\n",
					" - If the last check in was before 9 AM (9:00) on a weekday, then \"accessOutsideOfSchool\" is true.\r\n",
					" - If the last check in was after 4 PM (16:00) on a weekday, then \"accessOutsideOfSchool\" is true. \r\n",
					"\r\n",
					"Otherwise, \"accessOutsideOfSchool\" is defaulted to false. \r\n",
					"\r\n",
					"Also this code creates a \"lastCheckInDate\" date-type column, used for the date filter in the PowerBI dashboard."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"dfIntuneDevices = dfIntuneDevices.withColumn('lastCheckInTime', split(col('lastCheckIn'), ' ').getItem(1))\r\n",
					"dfIntuneDevices = dfIntuneDevices.withColumn('lastCheckInDate', split(col('lastCheckIn'), ' ').getItem(0))\r\n",
					"dfIntuneDevices = dfIntuneDevices.withColumn('lastCheckInHourOfDay', split(col('lastCheckInTime'), ':').getItem(0))\r\n",
					"dfIntuneDevices = dfIntuneDevices.drop('lastCheckInTime')\r\n",
					"\r\n",
					"dfIntuneDevices = dfIntuneDevices.withColumn('lastCheckInDate', to_date(col('lastCheckInDate'), 'yyyy-MM-dd'))\r\n",
					"dfIntuneDevices = dfIntuneDevices.withColumn('lastCheckInDayOfWeek', date_format(col('lastCheckIn'), \"E\"))\r\n",
					"\r\n",
					"dfIntuneDevices = dfIntuneDevices.withColumn('AccessOutsideOfSchool', when(col('lastCheckInDayOfWeek') == \"Sat\", \"true\").otherwise(when(col('lastCheckInDayOfWeek') == \"Sun\", \"true\").otherwise(when(col('lastCheckInHourOfDay') >= 16, \"true\").otherwise(when(col('lastCheckInHourOfDay') < 9, \"true\").otherwise(\"false\")))))\r\n",
					"# Can comment out this drop if you don't want to drop these two columns\r\n",
					"dfIntuneDevices = dfIntuneDevices.drop('lastCheckInDayOfWeek').drop('lastCheckInHourOfDay')\r\n",
					"\r\n",
					"display(dfIntuneDevices.limit(10))"
				],
				"attachments": null,
				"execution_count": 18
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Write Data Back to Lake\r\n",
					"\r\n",
					"### Writing to Stage 2np"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# write back to the lake in stage 2 ds2_main directory\r\n",
					"dfIntuneDevices.coalesce(1).write.format('parquet').mode('overwrite').save(stage2np + '/intune/devices')"
				],
				"attachments": null,
				"execution_count": 19
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Writing to Stage 2p\r\n",
					"Pseudonymizing the primaryUserUPNs (userPrincipalNames) data from the devices CSV."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run /OEA_py"
				],
				"attachments": null,
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"oea = OEA()"
				],
				"attachments": null,
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"devicesSchema = [['DeviceName', 'string', 'no-op'],\r\n",
					"                            ['ManagedBy', 'string', 'no-op'],\r\n",
					"                            ['Ownership', 'string', 'no-op'],\r\n",
					"                            ['Compliance','string','no-op'],\r\n",
					"                            ['OS', 'string', 'no-op'],\r\n",
					"                            ['OSVersion', 'string', 'no-op'],\r\n",
					"                            ['LastCheckIn', 'timestamp', 'no-op'],\r\n",
					"                            ['PrimaryUserUPN', 'string', 'hash'],\r\n",
					"                            ['DeviceID', 'string', 'no-op'],\r\n",
					"                            ['AccessOutsideOfSchool', 'boolean', 'no-op']]\r\n",
					"\r\n",
					"df_pseudo, df_lookup = oea.pseudonymize(dfIntuneDevices, devicesSchema)\r\n",
					"\r\n",
					"df_pseudo.coalesce(1).write.format('parquet').mode('overwrite').save(stage2p + '/intune/devices')"
				],
				"attachments": null,
				"execution_count": 22
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Load to Spark DB"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create spark db to allow for access to the data in the delta-lake via SQL on-demand.\r\n",
					"# This is only creating metadata for SQL on-demand, pointing to the data in the delta-lake.\r\n",
					"# This also makes it possible to connect in Power BI via the azure sql data source connector.\r\n",
					"def create_spark_db(db_name, source_path):\r\n",
					"    spark.sql(f'CREATE DATABASE IF NOT EXISTS {db_name}')\r\n",
					"    spark.sql(f\"DROP TABLE IF EXISTS {db_name}.devices\")\r\n",
					"    spark.sql(f\"create table if not exists {db_name}.devices using PARQUET location '{source_path}'\")\r\n",
					"    \r\n",
					"create_spark_db('s2np_intune', stage2np + '/intune/devices')\r\n",
					"create_spark_db('s2p_intune', stage2p + '/intune/devices')"
				],
				"attachments": null,
				"execution_count": 23
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Reset Data Processing"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Uncomment line 8 if you would like to walk through the process again from the beginning\r\n",
					"def reset_all_processing():\r\n",
					"    oea.rm_if_exists(stage2np + '/intune/devices')\r\n",
					"    oea.rm_if_exists(stage2p + '/intune/devices')\r\n",
					"    oea.drop_db('s2np_intune')\r\n",
					"    oea.drop_db('s2p_intune')\r\n",
					"\r\n",
					"#reset_all_processing()"
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}